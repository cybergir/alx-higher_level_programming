The '1-my_list' Module
======================

How to use the module:

This module defines a single class 'MyClass', which contains a method 'print_sorted'
that sorts out a list in ascending order.

First import it
::
	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()

Test different scenarios:

Integer list
============
::
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(8)
	>>> my_list.append(5)
	>>> print(my_list)
	[4, 2, 8, 5]

	>>> my_list.print_sorted()
	[2, 4, 5, 8]


	>>> mlist = MyList()
	>>> mlist.append(4)
	>>> mlist.append(-2)
	>>> mlist.append(0)
	>>> mlist.append(3)
	>>> print(mlist)
	[4, -2, 0, 3]

	>>> mlist.print_sorted()
	[-2, 0, 3, 4]

Negative Integers
=================
::
	>>> my_list = MyList()
	>>> my_list.append(-8)
	>>> my_list.append(-1)
	>>> my_list.append(-4)
	>>> my_list.append(-12)
	>>> print(my_list)
	[-8, -1, -4, -12]
	
	>>> my_list.print_sorted()
	[-12, -8, -4, -1]

Floats
======
::
	>>> mlist = MyList()
	>>> mlist.append(0.5)
	>>> mlist.append(4.4)
	>>> mlist.append(0.6)
	>>> mlist.append(3.3)
	>>> print(mlist)
	[0.5, 4.4, 0.6, 3.3]

	>>> mlist.print_sorted()
	[0.5, 0.6, 3.3, 4.4]

Empty
=====
::
	>>> mlist = MyList()
	>>> print(mlist)
	[]

	>>> mlist.print_sorted()
	[]


Non-numbers
===========
::
	>>> mlist = MyList()
	>>> mlist.append(-1)
	>>> mlist.append('s')
	>>> mlist.append(90)
	>>> print(mlist)
	[-1, 's', 90]

	>>> mlist.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'str' and 'int'


None type
=========
::
	>>> mlist = MyList()
	>>> mlist.append(23)
	>>> mlist.append(2)
	>>> mlist.append(None)
	>>> print(mlist)
	[23, 2, None]

	>>> mlist.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'NoneType' and 'int'


Another list
============
::
	>>> mlist = MyList()
	>>> mlist.append([4, 6, 2])
	>>> mlist.append([5, 0, 1])
	>>> mlist.append(0)
	>>> print(mlist)
	[[4, 6, 2], [5, 0, 1], 0]

	>>> mlist.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'int' and 'list'


A dictionary
============
::
	>>> mlist = MyList()
	>>> mlist.append({2:"value1", 3:"val2"})
	>>> mlist.append(1)
	>>> mlist.append(8)
	>>> print(mlist)
	[{2: 'value1', 3: 'val2'}, 1, 8]

	>>> mlist.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'int' and 'dict'

A tuple
========
::
	>>> mlist = MyList()
	>>> mlist.append((4, 9, 0))
	>>> mlist.append(-1)
	>>> mlist.append(0)
	>>> print(mlist)
	[(4, 9, 0), -1, 0]

	>>> mlist.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'int' and 'tuple'


No arguments
============
::
	>>> mlist = MyList()
	>>> mlist.append()
	Traceback (most recent call last):
		...
	TypeError: append() takes exactly one argument (0 given)
