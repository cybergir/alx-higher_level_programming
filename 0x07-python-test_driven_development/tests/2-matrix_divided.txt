The ``2-matrix_divided`` module
===============================
Test file in reStructuredText format. Import the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use it:

	>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

	>>> matrix_divided(matrix, 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

matrix that contains non-numbers:

	>>> matrix = [['2', '5', '6'], [8, 3, 1]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrx = [[0, 9, 8], [4, 6, 3]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero


	>>> matrix_divided(matrx, -3)
	[[-0.0, -3.0, -2.67], [-1.33, -2.0, -1.0]]


	>>> matrix_divided(None, None)
	Traceback (most recent call last):
		...
	TypeError: div must be a number


	>>> matrix_divided(None)
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'


	>>> matrix_divided(None, 4)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix_divided([[4, 5, 7, 9], [3, 5]], 5)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size


	>>> matrix_divided([[],[],[]], 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix_divided([], 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats



	>>> matrix = {4:34, 6:67, 9:12}
	>>> matrix_divided(matrix, 6)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats



	>>> matrix = [(3, 5, 6), (1, 5, 7), (2, 9)]
	>>> matrix_divided(matrix, 7)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats



	>>> matrix = [3, 5, 6, 7]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix = [[5, 6, 8], [1, 0, 9]]
	>>> matrix_divided(matrix, "alx")
	Traceback (most recent call last):
		...
	TypeError: div must be a number


	>>> matrix_divided(0)
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'


	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
