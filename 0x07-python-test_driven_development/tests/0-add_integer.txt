The ``0-add_integer`` module
============================

This is a test file in reStructuredText format. First import the
function ``add_integer`` from the ``0-add_integer`` module:

	>>> add_integer = __import__("0-add_integer").add_integer

Call the function, providing one argument:

	>>> add_integer(5)
	103

Call with float types:

	>>> add_integer(14.0, 5.1)
	19

with negative integer:

	>>> add_integer(10, -4)
	6

Call with non-integer types:
strings

	>>> add_integer('a', 7)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

lists

	>>> add_integer(6, [4, 6, 7])
	Traceback (most recent call last):
		...
	TypeError: b must be an integer

Null

	>>> add_integer(None)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

No arguments:

	>>> add_integer()
	Traceback (most recent call last):
		...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Impossible values:

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer


	>>> add_integer(float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer
